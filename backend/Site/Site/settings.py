"""
Django settings for Site project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # 这里是项目的根目录，也就是Site文件夹

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-(2mdccl)(k8+z1)ci)!gf_65o46gslnyp-$b5-ix!r-7m4hah-"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['124.71.174.244', '127.0.0.1']

# LOGIN_URL = '/pages/usercenter/index'
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",  # 用来管理静态文件
    "rest_framework",  # 用来支持RESTful API
    # "django_q",
    'django_apscheduler',
    # !!!暂时放弃地理位置库
    # "django.contrib.gis",  # 用来支持地理位置字段

    # 下面是自己创建的app
    "community",  # 用户交流
    "user",  # 管理用户相关信息
    "material",  # 管理资料
    "notification",  # 管理通知
    "search",  # 管理搜索
    "knowledge",# 管理知识
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "Site.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.media",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Site.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
"""

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "Site",
        "HOST": "localhost",
        "PORT": "3306",
        "USER": "zombie",
        "PASSWORD": "zombie"
    }
}
DATABASE_APPS_MAPPING = {
    'django_apscheduler': 'default',  ##主要是就是这行代码
}
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 处理上传的媒体文件
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# 微信小程序的AppID和AppSecret
APPID = ""
APPSECRET = ""
CODE_TO_SESSION = "https://api.weixin.qq.com/sns/jscode2session?appid={}&secret={}&js_code={}&grant_type=authorization_code"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}


# Q_CLUSTER = {
#     'name': 'DjangoQ',  # 集群名称
#     'workers': 4,  # 启动4个工作进程
#     'timeout': 60,  # 任务超时时间
#     'queue_limit': 50,  # 每个队列最多50个任务
#     'bulk': 10,  # 每次批量执行的任务数量
#     'save_limit': 250,  # 任务保存限制
#     'db': True,  # 使用数据库作为任务队列后端
# }

# from django_apscheduler.jobstores import DjangoJobStore
# APSCHEDULER_JOBSTORES = {
#     'default': DjangoJobStore(),  # 使用 DjangoJobStore 来存储任务
# }
#
# APSCHEDULER_EXECUTORS = {
#     'default': {
#         'type': 'threadpool',
#         'max_count': 3,  # 设置最大线程数
#     },
# }
#
# APSCHEDULER_JOB_DEFAULTS = {
#     'coalesce': False,  # 设置任务是否合并
#     'max_instances': 1,  # 设置任务最大实例数
# }

